type El;
pred le(El, El);
func meet(El, El) -> El;

// Axioms of posets.
rule {
    if x: El;
    then le(x, x);
}
rule {
    if le(x, y);
    if le(y, z);
    then le(x, z);
}
rule {
    if le(x, y);
    if le(y, x);
    then x = y;
}

// Axioms of meets.
rule {
    if x: El;
    if y: El;
    then meet(x, y)!;
}
rule {
    if meet = meet(x, y);
    then le(meet, x);
    then le(meet, y);
}
rule {
    if le(z, x);
    if le(z, y);
    if meet = meet(x, y);
    then le(z, meet);
}
