type M;
func e() -> M;
func mul(M, M) -> M;

rule right_identity {
    if t_0 = x;
    if t_1 = e();
    if to = x;
    then mul(t_0, t_1) = to;
}
rule left_identity {
    if t_0 = e();
    if t_1 = x;
    if to = x;
    then mul(t_0, t_1) = to;
}
rule {
    if t_0 = mul(a, b);
    if t_1 = c;
    if to = mul(a, mul(b, c));
    then mul(t_0, t_1) = to;
}
rule {
    if t_0 = a;
    if t_1 = mul(b, c);
    if to = mul(mul(a, b), c);
    then mul(t_0, t_1) = to;
}
