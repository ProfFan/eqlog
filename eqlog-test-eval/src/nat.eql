

enum N {
    Zero(),
    Succ(n: N)
}

func plus(m: N, n: N) -> N;

rule zero_plus {
    if a = plus(Zero(), n);
    then a = n;
}

rule plus_induction_second_arg {
    if plus(m, n) = k;
    match n {
        Zero() => {
            then k = m;
        }
        Succ(p) => {
            then Succ(m)!;
            then k = plus(Succ(m), p);
        }
    }
}
