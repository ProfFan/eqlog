pred a();
pred b();
pred b_0();
pred c();
pred c_0();
pred d();
pred d_0();

rule branching_predicates {
    if a();
    branch {
        if b();
        then b_0();
    } along {
        if c();
        then c_0();
    }
    if d();
    then d_0();
}


type Foo;
pred bar(Foo);
pred baz(Foo);

rule branching_same_variable_after {
    branch {
        if bar(x);
        then x = x;
    }
    // This should bind to all possible x: Foo, regardless
    // of how `x` was matched in the branch before.
    if x: Foo;
    then baz(x);
}
