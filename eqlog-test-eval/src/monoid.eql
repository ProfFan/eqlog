type M;
// The neutral element.
func e() -> M;
// The multiplication operation.
func mul(M, M) -> M;

rule e_total {
    then e()!;
}
rule mul_total {
    if x: M;
    if y: M;
    then mul(x, y)!;
}
rule right_identity {
    if y = mul(x, e());
    then x = y;
}
rule left_identity {
    if y = mul(e(), x);
    then x = y;
}
rule associativity {
    if d = mul(mul(a, b), c);
    if e = mul(a, mul(b, c));
    then d = e;
}
